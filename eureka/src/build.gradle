plugins {
    id 'java'
}

group 'com.template'

repositories {
    mavenCentral()
}

processResources {
    if (env == 'dev') {
        from(rootProject.projectDir.getPath() + "/properties") {
            include 'application.properties'
            include 'application-docker.properties'
        }
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {
    compile 'org.slf4j:slf4j-api'
    compile 'org.slf4j:log4j-over-slf4j'
    compile 'org.slf4j:jcl-over-slf4j'
    compile 'ch.qos.logback:logback-core'
    compile 'ch.qos.logback:logback-classic'
    compile 'com.zaxxer:HikariCP'
    compile 'org.postgresql:postgresql'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-tomcat'
    compile 'org.junit.jupiter:junit-jupiter'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    annotationProcessor("org.projectlombok:lombok")
    testImplementation("org.springframework.boot:spring-boot-starter-test")
}
